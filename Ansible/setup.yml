---
- hosts: all
  gather_facts: no
  remote_user: dbadmin

  tasks:

  - name: Loading variables
    include_vars:
      file: ./variables.yml
      name: var
  
  - name: Obtaining node private IP
    shell: hostname -I | awk '{print $1}'
    register: node_ip

- name: Setup of etcd
  hosts: etcd
  remote_user: dbadmin
  gather_facts: no
  become: yes
  
  tasks:

  - name: Download and extract etcd binaries
    unarchive:
      src: https://github.com/etcd-io/etcd/releases/download/v3.4.16/etcd-v3.4.16-linux-amd64.tar.gz
      dest: /tmp/
      remote_src: yes
  
  - name: Copying etcd binaries to /usr/local/bin
    copy:
      src: /tmp/etcd-v3.4.16-linux-amd64/{{item}}
      dest: /usr/local/bin/
      mode: 0755
      remote_src: yes
    loop:
      - etcd
      - etcdctl

  - name: etcd configuration folders
    file:
      path: "{{item}}"
      state: directory
      mode: 0755
    loop:
      - /var/lib/etcd/
      - /etc/etcd/

  - name: Creating etcd user
    user:
      name: etcd
      shell: /sbin/nologin

  - name: Setting ownership of etcd folder
    file:
      path: /var/lib/etcd/
      owner: etcd
      group: etcd
      mode: 0700

  - name: Creating etcd service
    copy:
      src: ../files/etcd.service
      dest: /etc/systemd/system/etcd.service

  - name: etcd configuration file
    copy:
      dest: /etc/etcd/etcd.conf
      content: |
        ETCD_LISTEN_PEER_URLS="http://{{ var.etcd_vm_private_ip }}:2380,http://127.0.0.1:7001"
        ETCD_LISTEN_CLIENT_URLS="http://127.0.0.1:2379, http://{{ var.etcd_vm_private_ip }}:2379"
        ETCD_INITIAL_ADVERTISE_PEER_URLS="http://{{ var.etcd_vm_private_ip }}:2380"
        ETCD_INITIAL_CLUSTER="pgsql-dcs=http://{{ var.etcd_vm_private_ip }}:2380"
        ETCD_ADVERTISE_CLIENT_URLS="http://{{ var.etcd_vm_private_ip }}:2379"
        ETCD_ENABLE_V2=true
        ETCD_DATA_DIR=/var/lib/etcd
        ETCD_INITIAL_CLUSTER_TOKEN="pgsql-vm"
        ETCD_INITIAL_CLUSTER_STATE="new"
      mode: 0644

  - name: Starting etcd service
    systemd:
      daemon_reload: yes
      state: restarted
      name: etcd
      enabled: yes

- name: Setup of HAProxy
  hosts: haproxy
  gather_facts: no
  remote_user: dbadmin
  become: yes

  tasks:

    - name: Setting SELinux in Permissive mode
      selinux:
        policy: targeted
        state: permissive
    
    - name: Installing HAProxy package
      dnf:
        name: haproxy
        state: latest

    - name: Copying haproxy.cfg
      copy:
        src: ../files/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        mode: 0644

    - name: Replacing the servers in template file haproxy.cfg
      replace:
        path: /etc/haproxy/haproxy.cfg
        regexp: 'pgsql_vm1_private_ip'
        replace: "{{ var.pgsql_vm1_private_ip }}"

    - name: Replacing the servers in template file haproxy.cfg 
      replace:
        path: /etc/haproxy/haproxy.cfg
        regexp: 'pgsql_vm2_private_ip'
        replace: "{{ var.pgsql_vm2_private_ip }}"

    - name: Restarting HAProxy service
      systemd:
        name: haproxy
        state: restarted

- name: Setup of Patroni
  hosts: pgsql
  gather_facts: no
  remote_user: dbadmin
  become: yes

  tasks:

  - name: Installing PostgreSQL repository RPM
    dnf:
      name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
      state: latest
      disable_gpg_check: yes

  - name: Installing Patroni package
    dnf:
      name: patroni
      state: latest

  - name: Creating patroni config directory
    file:
      path: /etc/patroni/
      state: directory
      mode: 0755

  - name: Copying Patroni configuration file
    copy:
      src: ../files/patroni.yml
      dest: /etc/patroni/patroni.yml

  - name: Replacing the servers in template file patroni.yml 
    replace:
      path: /etc/patroni/patroni.yml
      regexp: 'pgsql_node_private_ip'
      replace: "{{ node_ip.stdout }}"    
  
  - name: Replacing the servers in template file patroni.yml 
    replace:
      path: /etc/patroni/patroni.yml
      regexp: 'pgsql_vm1_private_ip'
      replace: "{{ var.pgsql_vm1_private_ip }}"

  - name: Replacing the servers in template file patroni.yml 
    replace:
      path: /etc/patroni/patroni.yml
      regexp: 'pgsql_vm2_private_ip'
      replace: "{{ var.pgsql_vm2_private_ip }}"

  - name: Replacing the servers in template file patroni.yml 
    replace:
      path: /etc/patroni/patroni.yml
      regexp: 'etcd_vm_private_ip'
      replace: "{{ var.etcd_vm_private_ip }}"

- name: Setup of PostgreSQL
  hosts: pgsql
  gather_facts: no
  remote_user: dbadmin
  become: yes

  tasks:

    - name: Partitioninig the attached disk
      parted:
        device: /dev/sdb
        number: 1
        state: present

    - name: Formatting the attached disk
      filesystem:
        fstype: xfs
        dev: /dev/sdb1

    - name: Creating the postgres data directory
      file: 
        path: /var/lib/pgsql/13/
        state: directory
        mode: 0755

    - name: Mounting the disk
      mount:
        fstype: xfs
        src: /dev/sdb1
        path: /var/lib/pgsql/13/
        state: mounted

    - name: Disabling default postgresql repo
      shell: dnf -qy module disable postgresql

    - name: Installing postgresql13-server package
      dnf: 
        name: postgresql13-server
        state: latest
    
    #Only run during first time setup
    - name: Deleting default PostgreSQL-13 folders
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/lib/pgsql/13/data/
        - /var/lib/pgsql/13/backups/

    - name: Installing pip modules for Patroni
      pip:
        name: 
          - urllib3
          - patroni[etcd]

    - name: Starting Patroni
      systemd:
        name: patroni
        state: restarted
        
